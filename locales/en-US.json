{
  "operation": "Operation",
  "resources": {
    "displayName": "Resource",
    "document": "Document",
    "envelope": "Envelope",
    "event": "Event",
    "template": "Template",
    "notification": "Notification",
    "watcher": "Watcher",
    "folder": "Folder",
    "requirement": "Requirement",
    "signer": "Signer"
  },
  "document": {
    "operations": {
      "update": {
        "name": "Update",
        "value": "update",
        "action": "Update document",
        "description": "Update document"
      },
      "createByBase64": {
        "name": "Create By Base64",
        "value": "createByBase64",
        "action": "Create document by base64",
        "description": "Create document by base64"
      },
      "createByTemplate": {
        "name": "Create By Template",
        "value": "createByTemplate",
        "action": "Create document by template",
        "description": "Create document by template"
      },
      "delete": {
        "name": "Delete",
        "value": "delete",
        "action": "Delete document",
        "description": "Delete document"
      },
      "getAll": {
        "name": "List All",
        "value": "getAll",
        "action": "List all documents",
        "description": "List all documents"
      },
      "getDetails": {
        "name": "Get Details",
        "value": "getDetails",
        "action": "Get details of a document",
        "description": "Get details of a document"
      }
    },
    "fields": {
      "createByBase64": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope that contains the document to create"
        },
        "filename": {
          "displayName": "Filename (With Extension)",
          "description": "Name of the file to create with extension"
        },
        "fileBase64": {
          "displayName": "File Base64",
          "description": "Base64 of the file to create"
        },
        "metadata": {
          "displayName": "Metadata",
          "description": "JSON with metadata that is used in document webhooks returns"
        }
      },
      "createByTemplate": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope that contains the document to create"
        },
        "filename": {
          "displayName": "Filename (.docx)",
          "description": "Name of the file to create with extension .docx"
        },
        "templateId": {
          "displayName": "Template ID",
          "description": "ID of the template to use for the creation"
        },
        "templateData": {
          "displayName": "Template Data",
          "description": "JSON with key and value of the values that will fill the template"
        },
        "metadata": {
          "displayName": "Metadata",
          "description": "JSON with metadata that is used in document webhooks returns"
        }
      },
      "delete": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope that contains the document to delete"
        },
        "documentId": {
          "displayName": "Document ID",
          "description": "ID of the document to delete"
        }
      },
      "getAll": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope that contains the documents to list"
        }
      },
      "getDetails": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope that contains the document to get details"
        },
        "documentId": {
          "displayName": "Document ID",
          "description": "ID of the document to get details"
        }
      },
      "update": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope that contains the document to update"
        },
        "documentId": {
          "displayName": "Document ID",
          "description": "ID of the document to update"
        },
        "status": {
          "displayName": "Status",
          "description": "Only possible to change status of running documents (in progress/activated)",
          "options": {
            "canceled": "Canceled",
            "closed": "Completed"
          }
        },
        "metadata": {
          "displayName": "Metadata",
          "description": "JSON with metadata that is used in document webhooks returns"
        }
      }
    },
    "errors": {
      "createByBase64": "Error creating document by base 64",
      "createByTemplate": "Error creating document by template",
      "delete": "Error deleting document",
      "getAll": "Error getting documents",
      "getDetails": "Error getting details of a document",
      "update": "Error updating document"
    }
  },
  "envelope": {
    "operations": {
      "activate": {
        "name": "Activate",
        "value": "activate",
        "action": "Activate envelope",
        "description": "Activate envelope"
      },
      "update": {
        "name": "Update",
        "value": "update",
        "action": "Update envelope",
        "description": "Update envelope"
      },
      "create": {
        "name": "Create",
        "value": "create",
        "action": "Create envelope",
        "description": "Create envelope"
      },
      "delete": {
        "name": "Delete",
        "value": "delete",
        "action": "Delete envelope",
        "description": "Delete envelope"
      },
      "getAll": {
        "name": "List All",
        "value": "getAll",
        "action": "List all envelopes",
        "description": "List all envelopes"
      },
      "getDetails": {
        "name": "Get Details",
        "value": "getDetails",
        "action": "Get details of a envelope",
        "description": "Get details of a envelope"
      }
    },
    "fields": {
      "activate": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope to activate"
        }
      },
      "create": {
        "envelopeName": {
          "displayName": "Envelope Name",
          "description": "Name of the envelope"
        },
        "locale": {
          "displayName": "Locale",
          "description": "Locale used in emails, signature page and document log"
        },
        "autoClose": {
          "displayName": "Automatically Close After All Signers Sign",
          "description": "If true, the envelope will be closed automatically after all signers have signed"
        },
        "remindInterval": {
          "displayName": "Remind Interval",
          "description": "Determines if the document will have automatic reminders enabled (1,2,3,7,14)"
        },
        "blockAfterRefusal": {
          "displayName": "Block After Refusal By Signer",
          "description": "Determines if the signature process will be paused or not after a signer has refused"
        },
        "deadlineAt": {
          "displayName": "Deadline At",
          "description": "Deadline for the envelope and its documents (RFC 3339 format)"
        },
        "defaultSubject": {
          "displayName": "Default Subject",
          "description": "Define the subject of the email that will be sent to signers in the signature request"
        },
        "defaultMessage": {
          "displayName": "Default Message",
          "description": "Define the default message that will be sent to signers"
        },
        "folderId": {
          "displayName": "Folder ID",
          "description": "ID of the source folder"
        }
      },
      "delete": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope to delete"
        }
      },
      "getAll": {
        "status": {
          "displayName": "Filter Status",
          "description": "Inform a status if you want to filter: draft, running, closed, canceled"
        },
        "name": {
          "displayName": "Filter Name",
          "description": "Inform the full name of the envelope to consult"
        },
        "created": {
          "displayName": "Filter Creation Date",
          "description": "Inform the creation date intervals in the specification format (ISO 8601 and separated by comma)"
        },
        "modified": {
          "displayName": "Filter Modification Date",
          "description": "Inform the modification date intervals in the specification format (ISO 8601 and separated by comma)"
        },
        "deadline": {
          "displayName": "Filter Deadline",
          "description": "Inform the deadline intervals in the specification format (ISO 8601 and separated by comma)"
        },
        "sort": {
          "displayName": "Sort",
          "description": "Sort by envelope property (ex: name to sort by name in ascending order and -name to sort by name in descending order)"
        }
      },
      "getDetails": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope to get details"
        }
      },
      "update": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope to update"
        },
        "envelopeName": {
          "displayName": "Name",
          "description": "Name of the envelope"
        },
        "locale": {
          "displayName": "Locale",
          "description": "Locale used in emails, signature page and document log"
        },
        "autoClose": {
          "displayName": "Automatically Close After All Signers Sign",
          "description": "If true, the envelope will be closed automatically after all signers have signed"
        },
        "remindInterval": {
          "displayName": "Remind Interval",
          "description": "Determines if the document will have automatic reminders enabled (1,2,3,7,14)"
        },
        "blockAfterRefusal": {
          "displayName": "Block After Refusal By Signer",
          "description": "Determines if the signature process will be paused or not after a signer has refused"
        },
        "deadlineAt": {
          "displayName": "Deadline At",
          "description": "Deadline for the envelope and its documents (RFC 3339 format)"
        },
        "defaultSubject": {
          "displayName": "Default Subject",
          "description": "Define the subject of the email that will be sent to signers in the signature request"
        },
        "defaultMessage": {
          "displayName": "Default Message",
          "description": "Define the default message that will be sent to signers"
        },
        "folderId": {
          "displayName": "Folder ID",
          "description": "ID of the source folder"
        }
      }
    },
    "errors": {
      "activate": "Error activating envelope",
      "create": "Error creating envelope",
      "delete": "Error deleting envelope",
      "getAll": "Error getting envelopes",
      "getDetails": "Error getting details of a envelope",
      "update": "Error updating envelope"
    }
  },
  "signer": {
    "operations": {
      "create": {
        "name": "Create",
        "action": "Create signer",
        "description": "Create signer"
      },
      "createAutoSignature": {
        "name": "Create Auto Signature",
        "action": "Create automatic signature",
        "description": "Create automatic signature"
      },
      "delete": {
        "name": "Delete",
        "action": "Delete signer",
        "description": "Delete signer from the envelope"
      },
      "getAll": {
        "name": "List",
        "action": "List Signers",
        "description": "List signers"
      },
      "getDetails": {
        "name": "Get Details",
        "action": "Get signer details",
        "description": "Get details of a signer for an envelope"
      }
    },
    "fields": {
      "create": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope to which the signer will be added"
        },
        "name": {
          "displayName": "Name",
          "description": "The signer's name, used to identify them (at least two words must be sent)"
        },
        "email": {
          "displayName": "Email",
          "description": "The signer's email (required when email notification is configured)"
        },
        "phoneNumber": {
          "displayName": "Phone",
          "description": "The signer's phone number, which must have 10 or 11 digits (required when notification setup requires phone)"
        },
        "hasDocumentation": {
          "displayName": "Has CPF",
          "description": "Defines whether the signer must provide CPF (Brazilian ID) and Date of Birth"
        },
        "documentation": {
          "displayName": "CPF",
          "description": "The signer's CPF (Brazilian ID)"
        },
        "group": {
          "displayName": "Group",
          "description": "Determines which group the signer should be linked to, according to the signing order"
        },
        "refusable": {
          "displayName": "Allow Refusing The Signature Request",
          "description": "Defines whether the signer can refuse the request"
        },
        "birthday": {
          "displayName": "Date Of Birth",
          "description": "Signer's date of birth (e.g.: DD/MM/YYYY, YYYY-MM-DD)"
        },
        "locationRequired": {
          "displayName": "Location Required",
          "description": "Determines if the signer must share their location at the time of signing"
        },
        "communicateEvents": {
          "displayName": "Event Notification",
          "description": "Configures notifications to the signer",
          "events": {
            "displayName": "Notification Configuration",
            "signature_request": "Signature Request",
            "signature_reminder": "Signature Reminder",
            "document_signed": "Document Signed",
            "none": "None",
            "email": "Email",
            "whatsapp": "Whatsapp",
            "sms": "SMS"
          }
        }
      },
      "createAutoSignature": {
        "name": {
          "displayName": "Name",
          "description": "The signer's name, used to identify them (at least two words must be sent)"
        },
        "email": {
          "displayName": "Email",
          "description": "The signer's email"
        },
        "documentation": {
          "displayName": "CPF",
          "description": "The signer's CPF (Brazilian ID)"
        },
        "birthday": {
          "displayName": "Date Of Birth",
          "description": "Signer's date of birth (e.g.: DD/MM/YYYY, YYYY-MM-DD)"
        },
        "apiEmail": {
          "displayName": "API Email",
          "description": "The API email"
        },
        "adminEmail": {
          "displayName": "Admin Email",
          "description": "The administrator's email"
        }
      },
      "delete": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the Envelope that has the signer"
        },
        "signerId": {
          "displayName": "Signer ID",
          "description": "ID of the Signer you want to delete"
        }
      },
      "getAll": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the envelope for which you want to list the signers"
        }
      },
      "getDetails": {
        "envelopeId": {
          "displayName": "Envelope ID",
          "description": "ID of the Envelope that has the signer"
        },
        "signerId": {
          "displayName": "Signer ID",
          "description": "ID of the Signer you want to view"
        }
      }
    },
    "errors": {
      "create": "Error creating the signer",
      "createAutoSignature": "Error creating automatic signature",
      "delete": "Error deleting signer",
      "getAll": "Error listing envelope signers",
      "getDetails": "Error getting signer details"
    }
  },
  "template": {
    "operations": {
      "create": {
        "name": "Create",
        "action": "Create template",
        "description": "Create template"
      },
      "update": {
        "name": "Update",
        "action": "Update template",
        "description": "Update template"
      },
      "delete": {
        "name": "Delete",
        "action": "Delete template",
        "description": "Delete template"
      },
      "getAll": {
        "name": "List",
        "action": "List templates",
        "description": "List templates"
      },
      "getDetails": {
        "name": "Get Details",
        "action": "Get template details",
        "description": "Get details of a template"
      }
    },
    "fields": {
      "create": {
        "name": {
          "displayName": "Name",
          "description": "Defines the Template name to facilitate future consultations"
        },
        "base64": {
          "displayName": "File In Base 64",
          "description": "Content of the file in base 64 format that is being sent to Clicksign"
        },
        "color": {
          "displayName": "Color",
          "description": "The identification color of the template"
        }
      },
      "delete": {
        "templateId": {
          "displayName": "Template ID",
          "description": "ID of the Template to be deleted"
        }
      },
      "getDetails": {
        "templateId": {
          "displayName": "Template ID",
          "description": "ID of the Template whose details you want to get"
        }
      },
      "update": {
        "templateId": {
          "displayName": "Template ID",
          "description": "ID of the Template to be updated"
        },
        "name": {
          "displayName": "Name",
          "description": "Defines the Template name to facilitate future consultations"
        },
        "color": {
          "displayName": "Color",
          "description": "The identification color of the template"
        }
      }
    },
    "errors": {
      "create": "Error creating template",
      "update": "Error updating template",
      "delete": "Error deleting template",
      "getAll": "Error listing templates",
      "getDetails": "Error getting template details"
    }
  },
  "colors": {
    "#1474f5": "Royal Blue",
    "#15d3c9": "Turquoise",
    "#05c412": "Lime Green",
    "#fccf00": "Yellow",
    "#f77c04": "Burnt Orange",
    "#cf2e58": "Magenta Red",
    "#ff86d5": "Hot Pink",
    "#8726d9": "Purple",
    "#577b8d": "Grayish Blue"
  }
}
