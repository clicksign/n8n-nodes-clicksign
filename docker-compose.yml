volumes:
  n8n_storage:
  postgres_storage:

networks:
  n8n_network:

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['n8n_network']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - N8N_RUNNERS_ENABLED=true
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    - N8N_LOG_LEVEL=debug
    - N8N_LOG_OUTPUT=console
    - CODE_ENABLE_STDOUT=true
    - OLLAMA_HOST=host.docker.internal:11434
    - GENERIC_TIMEZONE=America/Sao_Paulo
  env_file:
    - .env

services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    container_name: n8n-postgres
    networks: ['n8n_network']
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}',
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    <<: *service-n8n
    hostname: n8n-import
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - '-c'
      - 'n8n import:credentials --separate --input=/demo-data/credentials && n8n import:workflow --separate --input=/demo-data/workflows'
    volumes:
      - ./n8n/demo-data:/demo-data
    depends_on:
      postgres:
        condition: service_healthy

  n8n-build-custom:
    <<: *service-n8n
    hostname: n8n-build-custom
    container_name: n8n-build-custom
    entrypoint: /bin/sh
    command:
      - '-c'
      - 'cd /home/node/.n8n/custom/n8n-nodes-clicksign && HUSKY=0 npm install --include=dev && npm run build'
    volumes:
      - .:/home/node/.n8n/custom/n8n-nodes-clicksign
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    hostname: n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/demo-data:/demo-data
      - ./shared:/data/shared
      - .:/home/node/.n8n/custom/n8n-nodes-clicksign
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully
      n8n-build-custom:
        condition: service_completed_successfully
